{"version":3,"sources":["logo.svg","Components/Header.js","Components/Car.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Car","state","cars","hasSunRoof","isFourWhealDrive","isPowerWindows","hasLowMiles","hasNavigation","hasHeadSet","document","getElementsByClassName","value","fetch","mode","response","json","data","console","log","this","setState","event","target","name","checked","type","e","x","i","length","onChange","handleChange","variant","onClick","handleClickClear","map","item","index","make","year","color","hasPowerWindws","isFourWheelDrive","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"2QAAe,I,YCGA,SAASA,IACpB,OACI,qBAAKC,UAAU,SAAf,SACG,6D,+DCkIIC,G,wDAnIb,aAAc,IAAD,8BACT,gBACIC,MAAM,CACRC,KAAK,GACHC,YAAW,EACXC,kBAAiB,EACjBC,gBAAe,EACfC,aAAY,EACZC,eAAc,EACdC,YAAW,GATN,E,yLAiBDC,SAASC,uBAAuB,YAAYC,M,SAChCC,MAAM,yEAA0E,CAAEC,KAAM,Y,cAAzGC,E,gBACYA,EAASC,O,OAArBC,E,OACTC,QAAQC,IAAIF,GACZG,KAAKC,SAAS,CAAClB,KAAKc,I,0IAGLK,GAAQ,IAAD,EACUA,EAAMC,OAA3BC,EADW,EACXA,KAAYC,GADD,EACLC,KADK,EACCD,SACpBL,KAAKC,SAAL,eAAgBG,EAAMC,M,uCAGRE,GAGb,IADA,IAAIC,EAAIlB,SAASC,uBAAuB,YAChCkB,EAAE,EAAGA,GAAGD,EAAEE,OAAQD,IACvBD,EAAEC,GAAGJ,SAAU,I,+BAKlB,OACI,8BACI,iCACE,iDACA,kCACA,uBACAzB,UAAU,WACV0B,KAAM,WACNF,KAAK,eACLC,QAASL,KAAKlB,MAAME,WACpB2B,SAAUX,KAAKY,eANf,cASA,kCACA,uBACAhC,UAAU,WACV0B,KAAM,WACNF,KAAK,gBACLC,QAASL,KAAKlB,MAAMG,iBACpB0B,SAAUX,KAAKY,eANf,sBASA,kCACA,uBACAhC,UAAU,WACV0B,KAAM,WACNF,KAAK,eACLC,QAASL,KAAKlB,MAAMI,eACpByB,SAAUX,KAAKY,eANf,qBASA,kCACA,uBACAhC,UAAU,WACV0B,KAAM,WACNF,KAAK,eACLC,QAASL,KAAKlB,MAAMK,YACpBwB,SAAUX,KAAKY,eANf,eASA,kCACA,uBACAhC,UAAU,WACV0B,KAAM,WACNF,KAAK,eACLC,QAASL,KAAKlB,MAAMM,cACpBuB,SAAUX,KAAKY,eANf,gBASA,kCACA,uBACAhC,UAAU,WACV0B,KAAM,WACNF,KAAK,eACLC,QAASL,KAAKlB,MAAMO,WACpBsB,SAAUX,KAAKY,eANf,cASA,uBACA,wBAAQC,QAAQ,UAAhB,oBACA,wBAAQA,QAAQ,UAAUC,QAASd,KAAKe,iBAAxC,mBACA,uBACA,uBACV,8BAAK,6BAEJf,KAAKlB,MAAMC,KAAKiC,KAAI,SAASC,EAAMC,GAEhC,OACI,gCACJ,6BAAKD,EAAKE,OACV,6BAAKF,EAAKG,OACV,6BAAKH,EAAKI,QACV,6BAAKJ,EAAK9B,YAAY,gBAAgB,OACtC,6BAAK8B,EAAK7B,cAAc,iBAAiB,OACzC,6BAAK6B,EAAKK,eAAe,cAAc,OACvC,6BAAKL,EAAKM,iBAAiB,oBAAoB,OAC/C,uBACA,uBACA,0C,GArHWC,cCUJC,MATf,WACE,OACE,gCACE,cAAC9C,EAAD,IACA,cAAC,EAAD,QCGS+C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF/C,SAASgD,eAAe,SAM1BZ,M","file":"static/js/main.19297667.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react'\r\nimport  '../style.css';\r\n\r\nexport default function Header() {\r\n    return (\r\n        <div className=\"navbar\">\r\n           <h3>Best Seattle's car dealer</h3> \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Component } from 'react';\r\nimport Item from './Item';\r\n\r\nclass  Car extends Component  {\r\n  constructor(){\r\n      super()\r\n     this.state={\r\n        cars:[],\r\n          hasSunRoof:false,\r\n          isFourWhealDrive:true,\r\n          isPowerWindows:true,\r\n          hasLowMiles:false,\r\n          hasNavigation:false,\r\n          hasHeadSet:false\r\n      }\r\n  }\r\n\r\n async  componentDidMount(){\r\n     debugger;\r\n    // fetch(\"\thttps://localhost:44396/api/cars/select/true/false/true/true/true/true\")\r\n\r\n    let parm1=document.getElementsByClassName(\"checkbox\").value;\r\n   const response = await fetch('https://localhost:44396/api/cars/select/true/false/true/true/true/true', { mode: 'no-cors' });\r\n   const data= await response.json();\r\nconsole.log(data)\r\nthis.setState({cars:data})\r\n  }\r\n\r\n  handleChange(event) {\r\n    const {name, type, checked}=event.target\r\n   this.setState({[name]:checked})\r\n    }\r\n\r\nhandleClickClear(e) {\r\n    debugger;\r\n    var x = document.getElementsByClassName(\"checkbox\")\r\n    for(let i=0; i<=x.length; i++) {\r\n       x[i].checked = false;  \r\n}\r\n\r\n}\r\n    render(){\r\n    return (\r\n        <div>\r\n            <form>\r\n              <h5>Filter Criteria</h5>\r\n              <label>\r\n              <input \r\n              className=\"checkbox\"\r\n              type =\"checkbox\"\r\n              name=\"Has Sun Roof\" \r\n              checked={this.state.hasSunRoof}\r\n              onChange={this.handleChange}\r\n              />\r\n             Sun Roof</label>\r\n              <label>\r\n              <input \r\n              className=\"checkbox\"\r\n              type =\"checkbox\"\r\n              name=\"Is Four Wheal\" \r\n              checked={this.state.isFourWhealDrive}\r\n              onChange={this.handleChange}\r\n              />\r\n              Four Wheal drive</label>\r\n              <label>\r\n              <input \r\n              className=\"checkbox\"\r\n              type =\"checkbox\"\r\n              name=\"Has Sun Roof\" \r\n              checked={this.state.isPowerWindows}\r\n              onChange={this.handleChange}\r\n              />\r\n              Is Power Windos</label>\r\n              <label>\r\n              <input \r\n              className=\"checkbox\"\r\n              type =\"checkbox\"\r\n              name=\"Has Sun Roof\" \r\n              checked={this.state.hasLowMiles}\r\n              onChange={this.handleChange}\r\n              />\r\n              Low Miles</label>\r\n              <label>\r\n              <input\r\n              className=\"checkbox\" \r\n              type =\"checkbox\"\r\n              name=\"Has Sun Roof\" \r\n              checked={this.state.hasNavigation}\r\n              onChange={this.handleChange}\r\n              />\r\n              Navigation</label>\r\n              <label>\r\n              <input \r\n              className=\"checkbox\"\r\n              type =\"checkbox\"\r\n              name=\"Has Sun Roof\" \r\n              checked={this.state.hasHeadSet}\r\n              onChange={this.handleChange}\r\n              />\r\n              Head Set</label>\r\n              <br />\r\n              <button variant=\"primary\">Search</button> \r\n              <button variant=\"warning\" onClick={this.handleClickClear}>Clear</button>\r\n              <br />\r\n              <br />\r\n    <div><ul>\r\n        \r\n    {this.state.cars.map(function(item, index) \r\n    { \r\n        return (\r\n            <div>\r\n        <h3>{item.make}</h3>\r\n        <h3>{item.year}</h3>\r\n        <h3>{item.color}</h3>\r\n        <h3>{item.hasLowMiles?\"Has Low Miles\":null}</h3>\r\n        <h3>{item.hasNavigation?\"Has Navigation\":null}</h3>\r\n        <h3>{item.hasPowerWindws?\"PowerWindow\":null}</h3>\r\n        <h3>{item.isFourWheelDrive?\"FFour Wheal Drive\":null}</h3>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        </div>\r\n        )\r\n    }\r\n        )\r\n        \r\n        }\r\n        </ul>\r\n        </div>\r\n            </form>\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default Car","import logo from './logo.svg';\nimport './App.css';\nimport Header from './Components/Header';\nimport Car from './Components/Car';\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Car />\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}